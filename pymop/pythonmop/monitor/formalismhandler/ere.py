from pythonmop.monitor.formalismhandler.base import Base
from typing import List


class Ere(Base):
    """A class used to store the information of the ERE finite state machine and track the state transactions.
    """

    def __init__(self, formula: str, parameter_event_map: dict, coenable_mode: bool = False,
                 unit_test: bool = False):
        """Initialize the ERE FSM with a configuration string.

        Args:
            formula: The ERE finite state machine string generated by the Java logic plugins.
        """

        # Initialize the parent class (base).
        super().__init__(formula, 'ere', parameter_event_map, coenable_mode)

    def _is_matched(self) -> List[str]:
        """Check if the current state matches the spec defined by the user.

        Returns:
            One list of string containing all the matched categories.
        """

        # Check if the handler is in CFG mode
        if self.formalism == 'cfg':
            raise Exception('ERROR: the _input_parser method should not be called with CFG formalism.')

        # The only possible category is 'match' apart from the special 'fail' category
        if self.current_state in self.alias_sections['match']:
            matched_categories = ['match']
            return matched_categories
        else:
            empty_categories = []
            return empty_categories
